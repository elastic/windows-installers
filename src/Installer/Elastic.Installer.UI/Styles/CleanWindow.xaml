<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    x:Class="CleanWindow"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    mc:Ignorable="options">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
    <ResourceDictionary Source="pack://application:,,,/Elastic.Installer.UI;component/Resources/Icons.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <SolidColorBrush x:Key="BackgroundLogoBrush" Color="#33ADADAD" />
  <SolidColorBrush x:Key="IdealForegroundDisabledBrush" Color="#ADADAD" options:Freeze="True" />

  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <converters:ToUpperConverter x:Key="ToUpperConverter" />

  <Storyboard x:Key="YellowAnimation" RepeatBehavior="Forever" AutoReverse="True">
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
      <EasingColorKeyFrame KeyTime="00:00:02" Value="#FFFED10A"/>
      <EasingColorKeyFrame KeyTime="00:00:04" Value="#FFFED10A"/>
    </ColorAnimationUsingKeyFrames>
  </Storyboard>
  <Storyboard x:Key="TorqoiseAnimation" RepeatBehavior="Forever" AutoReverse="True">
    <ColorAnimationUsingKeyFrames BeginTime="00:00:01" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
      <EasingColorKeyFrame KeyTime="00:00:02" Value="#FF00BFB3"/>
      <EasingColorKeyFrame KeyTime="00:00:04" Value="#FF00BFB3"/>
    </ColorAnimationUsingKeyFrames>
  </Storyboard>
  <Storyboard x:Key="PinkAnimation" RepeatBehavior="Forever" AutoReverse="True">
    <ColorAnimationUsingKeyFrames BeginTime="00:00:02" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
      <EasingColorKeyFrame KeyTime="00:00:02" Value="#FFDF4998"/>
      <EasingColorKeyFrame KeyTime="00:00:04" Value="#FFDF4998"/>
    </ColorAnimationUsingKeyFrames>
  </Storyboard>
  <Storyboard x:Key="BlueAnimation" RepeatBehavior="Forever" AutoReverse="True">
    <ColorAnimationUsingKeyFrames BeginTime="00:00:03" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)">
      <EasingColorKeyFrame KeyTime="00:00:02" Value="#FF00A9E5" />
      <EasingColorKeyFrame KeyTime="00:00:04" Value="#FF00A9E5"/>
    </ColorAnimationUsingKeyFrames>
  </Storyboard>
  <ControlTemplate x:Key="CleanWindowTemplate" TargetType="{x:Type controls:MetroWindow}">
    <Grid>
      <AdornerDecorator>
        <Grid>
          <Grid.Background>
            <VisualBrush Stretch="UniformToFill">
              <VisualBrush.Visual>
                <Grid Background="{TemplateBinding Background}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="400"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                  </Grid.ColumnDefinitions>
                  <Viewbox Grid.Column="1" Stretch="UniformToFill" >
                    <Canvas  Width="292.52896" Height="290.72165" Background="{TemplateBinding Background}">
                      <Canvas.RenderTransform>
                        <TranslateTransform X="0" Y="0"/>
                      </Canvas.RenderTransform>
                      <Canvas.Resources>
                        <PathGeometry x:Name="logoGeometry" x:Key="logotransform" Figures="m 0 1024 1024 0 L 1024 0 0 0 0 1024 Z" FillRule="NonZero"/>
                      </Canvas.Resources>
                      <Canvas>
                        <Canvas.RenderTransform>
                          <MatrixTransform Matrix="1.25 0 0 -1.25 -548.61957 715.71274"/>
                        </Canvas.RenderTransform>
                        <Canvas>
                          <Canvas.RenderTransform>
                            <TranslateTransform X="44.008386" Y="-55.815514"/>
                          </Canvas.RenderTransform>
                          <Canvas>
                            <Canvas>
                              <Canvas.RenderTransform>
                                <TranslateTransform X="484.8634" Y="529.8922"/>
                              </Canvas.RenderTransform>
                              <Path Fill="{DynamicResource BackgroundLogoBrush}" x:Name="YellowCell">
                                <Path.Data>
                                  <PathGeometry Figures="m 0 0 55.407 -25.527 56.204 48.847 c 0.832 4.048 1.243 8.081 1.26 12.307 C 113.009 70.154 85.032 98.355 50.505 98.493 29.853 98.576 10.545 88.488 -1.237 71.479 L -10.746 23.179 0 0 Z" FillRule="nonzero"/>
                                </Path.Data>
                              </Path>
                            </Canvas>
                            <Canvas>
                              <Canvas.RenderTransform>
                                <TranslateTransform X="427.1671" Y="471.3369"/>
                              </Canvas.RenderTransform>
                              <Path Fill="{DynamicResource BackgroundLogoBrush}" x:Name="TorqoiseCell">
                                <Path.Data>
                                  <PathGeometry Figures="m 0 0 c -0.829 -4.044 -1.257 -8.242 -1.274 -12.491 -0.138 -34.619 27.916 -62.898 62.535 -63.037 20.827 -0.083 40.228 10.109 51.993 27.288 L 122.692 -0.108 110.443 23.521 54.815 49.148 0 0 Z" FillRule="nonzero"/>
                                </Path.Data>
                              </Path>
                            </Canvas>
                            <Canvas>
                              <Canvas.RenderTransform>
                                <TranslateTransform X="427.1996" Y="567.4049"/>
                              </Canvas.RenderTransform>
                              <Path Fill="{DynamicResource BackgroundLogoBrush}" x:Name="PinkCell">
                                <Path.Data>
                                  <PathGeometry Figures="m 0 0 38.006 -9.135 8.508 43.218 C 41.334 38.078 34.925 40.278 28.323 40.304 11.791 40.37 -1.711 26.974 -1.777 10.442 -1.791 6.792 -1.193 3.286 0 0" FillRule="nonzero"/>
                                </Path.Data>
                              </Path>
                            </Canvas>
                            <Canvas>
                              <Canvas.RenderTransform>
                                <TranslateTransform X="423.8606" Y="558.3578"/>
                              </Canvas.RenderTransform>
                              <Path Fill="{DynamicResource BackgroundLogoBrush}" x:Name="BlueCell">
                                <Path.Data>
                                  <PathGeometry Figures="m 0 0 c -17.019 -5.561 -28.901 -21.81 -28.973 -39.734 -0.069 -17.447 10.661 -33.076 26.837 -39.305 L 51.431 -31.006 41.71 -10.027 0 0 Z" FillRule="nonzero"/>
                                </Path.Data>
                              </Path>
                            </Canvas>
                            <Canvas>
                              <Canvas.RenderTransform>
                                <TranslateTransform X="550.1774" Y="423.06"/>
                              </Canvas.RenderTransform>
                              <Path Fill="{DynamicResource BackgroundLogoBrush}">
                                <Path.Data>
                                  <PathGeometry Figures="m 0 0 c 5.2 -4.028 11.576 -6.246 18.096 -6.272 16.532 -0.066 30.036 13.329 30.102 29.861 0.014 3.647 -0.581 7.151 -1.777 10.437 L 8.446 43.072 0 0 Z" FillRule="nonzero"/>
                                </Path.Data>
                              </Path>
                            </Canvas>
                            <Canvas>
                              <Canvas.RenderTransform>
                                <TranslateTransform X="558.1241" Y="476.0963"/>
                              </Canvas.RenderTransform>
                              <Path Fill="{DynamicResource BackgroundLogoBrush}">
                                <Path.Data>
                                  <PathGeometry Figures="m 0 0 41.809 -9.957 c 17.023 5.555 28.906 21.804 28.977 39.734 0.07 17.418 -10.684 33.024 -26.894 39.239 L -11.03 21.282 0 0 Z" FillRule="nonzero"/>
                                </Path.Data>
                              </Path>
                            </Canvas>
                          </Canvas>
                        </Canvas>
                      </Canvas>
                    </Canvas>
                  </Viewbox>
                </Grid>
              </VisualBrush.Visual>
            </VisualBrush>
          </Grid.Background>
          <Grid.ColumnDefinitions>
            <!-- icon -->
            <ColumnDefinition Width="Auto" />
            <!-- left window commands -->
            <ColumnDefinition Width="Auto" />
            <!-- title -->
            <ColumnDefinition Width="*" />
            <!-- right window commands -->
            <ColumnDefinition Width="Auto" />
            <!-- min,max,close buttons -->
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="80" MaxHeight="100" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>

          <!-- icon -->
          <ContentControl x:Name="PART_Icon"
                                    Focusable="False"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Panel.ZIndex="1"
                                    Content="{TemplateBinding Icon}"
                                    ContentTemplate="{TemplateBinding IconTemplate}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    MinWidth="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

          <!-- the left window commands -->
          <ContentPresenter x:Name="PART_LeftWindowCommands"
                                      Focusable="False"
                                      Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Panel.ZIndex="1"
                                      Grid.Row="0"
                                      Grid.Column="1"
                                      Grid.RowSpan="2"
                                      VerticalAlignment="Top"
                                      TextElement.Foreground="{DynamicResource BlackColorBrush}"
                                      Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

          <!-- the title bar -->
          <Grid x:Name="PART_TitleBar"
                          Focusable="False" 
                          Grid.Row="0"
                          Grid.Column="0"
                          Grid.ColumnSpan="5"
                          Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}">
            <!-- 
                          d Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" -->
            <!--This (empty) element is used so everything still responds to drag-->
            <Label VerticalContentAlignment="Stretch"
                               HorizontalContentAlignment="Stretch">
              <ContentControl x:Name="TitleControl"
                                            Focusable="False"
                                            Content="{TemplateBinding Title}"
                                            ContentTemplate="{TemplateBinding TitleTemplate}"
                                            HorizontalAlignment="Left">
                <ContentControl.Foreground>
                  <MultiBinding Converter="{x:Static converters:BackgroundToForegroundConverter.Instance}">
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Background"
                                                 Mode="OneWay" />
                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="TitleForeground"
                                                 Mode="OneWay" />
                  </MultiBinding>
                </ContentControl.Foreground>
              </ContentControl>
            </Label>

          </Grid>

          <!-- the right window commands -->
          <ContentPresenter x:Name="PART_RightWindowCommands"
                                      Focusable="False"
                                      Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Panel.ZIndex="1"
                                      Grid.Row="0"
                                      Grid.Column="3"
                                      Grid.RowSpan="2"
                                      VerticalAlignment="Top"
                                      TextElement.Foreground="{DynamicResource BlackColorBrush}"
                                      Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

          <!-- the window button commands -->
          <controls:WindowButtonCommands x:Name="PART_WindowButtonCommands"
                                                   Focusable="False"
                                                   Panel.ZIndex="1"
                                                   Grid.Row="0"
                                                   Grid.Column="4"
                                                   Grid.RowSpan="2"
                                                   VerticalAlignment="Top"
                                                   Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />

          <!-- the main window content -->
          <controls:MetroContentControl Grid.Row="1"
                                                  Grid.Column="0"
                                                  Grid.ColumnSpan="5"
                                                  IsTabStop="False"
                                                  FocusVisualStyle="{x:Null}"
                                                  OnlyLoadTransition="True"
                                                  TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}">
            <ContentPresenter />
          </controls:MetroContentControl>

          <!-- disables the main content when a modal flyout is shown -->
          <Rectangle Grid.Row="0"
                               Grid.RowSpan="2"
                               Grid.ColumnSpan="5"
                               Grid.Column="0"
                               x:Name="PART_FlyoutModal"
                               Fill="{DynamicResource BlackColorBrush}"
                               Opacity="0.5"
                               Visibility="Hidden" />

          <!-- flyouts -->
          <ContentControl Grid.Row="0"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="5"
                                    Grid.RowSpan="2"
                                    Panel.ZIndex="2"
                                    Focusable="False"
                                    KeyboardNavigation.TabNavigation="None"
                                    Content="{Binding Flyouts, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    VerticalAlignment="Stretch" />

          <!-- Used to create that overlay effect. Can be used for anything. -->
          <Grid Grid.Row="0"
                          Grid.Column="0"
                          Grid.ColumnSpan="5"
                          Grid.RowSpan="2"
                          Panel.ZIndex="3"
                          Focusable="False"
                          FocusVisualStyle="{x:Null}"
                          x:Name="PART_OverlayBox"
                          Background="{DynamicResource BlackColorBrush}"
                          Opacity="0"
                          Visibility="Hidden" />

          <Grid Grid.Row="0"
                          Grid.Column="0"
                          Grid.ColumnSpan="5"
                          Grid.RowSpan="2"
                          Panel.ZIndex="4"
                          FocusVisualStyle="{x:Null}"
                          x:Name="PART_MetroDialogContainer" />
        </Grid>
      </AdornerDecorator>
      <Border x:Name="PART_Border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch" />
      <ResizeGrip x:Name="WindowResizeGrip"
                        HorizontalAlignment="Right"
                        IsTabStop="false"
                        Visibility="Collapsed"
                        VerticalAlignment="Bottom" />
    </Grid>

    <ControlTemplate.Resources>

      <Storyboard x:Key="OverlayFastSemiFadeIn"
                        BeginTime="0:0:0"
                        AccelerationRatio=".97"
                        Storyboard.TargetProperty="Opacity"
                        SpeedRatio="2.7">
        <DoubleAnimation To=".7" />
      </Storyboard>
      <Storyboard x:Key="OverlayFastSemiFadeOut"
                        BeginTime="0:0:0"
                        AccelerationRatio=".97"
                        Storyboard.TargetProperty="Opacity"
                        SpeedRatio="2.7">
        <DoubleAnimation To="0." />
      </Storyboard>
    </ControlTemplate.Resources>
    <ControlTemplate.Triggers>
      <!-- handle active/inactive state -->
      <Trigger Property="IsActive"
                     Value="False">
        <Setter TargetName="PART_Border"
                        Property="BorderBrush"
                        Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}" />
      </Trigger>
      <!-- no icon and no icon content template -> collapse the icon content control -->
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Icon"
                               Value="{x:Null}" />
          <Condition Property="IconTemplate"
                               Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Icon"
                        Property="Visibility"
                        Value="Collapsed" />
        <Setter TargetName="PART_Icon"
                        Property="MinWidth"
                        Value="0" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ResizeMode"
                               Value="CanResizeWithGrip" />
          <Condition Property="WindowState"
                               Value="Normal" />
        </MultiTrigger.Conditions>
        <Setter Property="Visibility"
                        TargetName="WindowResizeGrip"
                        Value="Visible" />
      </MultiTrigger>
      <Trigger Property="TitleCaps"
                     Value="True">
        <Setter TargetName="TitleControl"
                        Property="Content"
                        Value="{Binding Path=Title, Converter={StaticResource ToUpperConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type controls:MetroWindow}"
           BasedOn="{StaticResource {x:Type controls:MetroWindow}}"
           x:Key="CleanWindowStyleKey">

    <Setter Property="ShowTitleBar"
                Value="True" />
    <Setter Property="MinWidth"
                Value="400" />
    <Setter Property="Template"
                Value="{StaticResource CleanWindowTemplate}" />
    <Setter Property="TitleForeground"
                Value="{DynamicResource BlackBrush}" />
    <Setter Property="OverrideDefaultWindowCommandsBrush"
                Value="{DynamicResource BlackBrush}" />
    <Setter Property="WindowMinButtonStyle"
                Value="{DynamicResource CleanWindowButtonStyle}" />
    <Setter Property="WindowMaxButtonStyle"
                Value="{DynamicResource CleanWindowButtonStyle}" />
    <Setter Property="WindowCloseButtonStyle"
                Value="{DynamicResource CleanCloseWindowButtonStyle}" />

  </Style>

  <Style x:Key="CleanWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroWindowButtonStyle}">

    <Style.Triggers>

      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Foreground" Value="White" />
      </Trigger>
      <Trigger Property="IsEnabled"
                     Value="false">
        <Setter Property="Foreground"
                        Value="{DynamicResource IdealForegroundDisabledBrush}" />
      </Trigger>

    </Style.Triggers>
  </Style>

  <Style x:Key="CleanCloseWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CleanWindowButtonStyle}">
    <Style.Triggers>

      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="#EB2F2F" />
        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="#7C0000" />
      </Trigger>

    </Style.Triggers>
  </Style>


  <Style TargetType="TabItem" x:Key="MetroTabItem">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Padding" Value="6,2,6,2" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="MinWidth" Value="5" />
    <Setter Property="MinHeight" Value="5" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <!-- special property for header font size -->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabItem">
          <Border x:Name="Border" HorizontalAlignment="Stretch"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <DockPanel.Resources>
                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
              </DockPanel.Resources>
              <ContentPresenter x:Name="ContentSite"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.FontSize="{TemplateBinding controls:ControlsHelper.HeaderFontSize}"
                                              TextElement.FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}"
                                              TextElement.FontWeight="{TemplateBinding controls:ControlsHelper.HeaderFontWeight}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              DockPanel.Dock="Top"/>
              <Rectangle x:Name="Underline" 
                                       Margin="0, 1, 0, 0" 
                                       Height="2" 
                                       HorizontalAlignment="Stretch" 
                                       Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, 
                                           Path=(controls:TabControlHelper.IsUnderlined), Converter={StaticResource BooleanToVisibilityConverter}}"
                                       DockPanel.Dock="Bottom"/>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Left">
              <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Left"/>
              <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right"/>
              <Setter Property="Width" TargetName="Underline" Value="2"/>
              <Setter Property="Height" TargetName="Underline" Value="Auto"/>
              <Setter Property="Margin" TargetName="Underline" Value="1,0,0,0"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Top">
              <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Top"/>
              <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Bottom"/>
              <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Right"/>
              <Setter Property="Height" TargetName="Underline" Value="2"/>
              <Setter Property="Width" TargetName="Underline" Value="Auto"/>
              <Setter Property="Margin" TargetName="Underline" Value="0,1,0,0"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
              <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Right"/>
              <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Left"/>
              <Setter Property="Width" TargetName="Underline" Value="2"/>
              <Setter Property="Height" TargetName="Underline" Value="Auto"/>
              <Setter Property="Margin" TargetName="Underline" Value="0,0,1,0"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
              <Setter Property="DockPanel.Dock" TargetName="ContentSite" Value="Bottom"/>
              <Setter Property="DockPanel.Dock" TargetName="Underline" Value="Top"/>
              <Setter Property="Height" TargetName="Underline" Value="2"/>
              <Setter Property="Width" TargetName="Underline" Value="Auto"/>
              <Setter Property="Margin" TargetName="Underline" Value="0,0,0,1"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource VersionColor}" />
              <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource VersionColor}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="false">
              <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource BlackBrush}" />
              <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource AccentColorBrush3}" />
            </Trigger>
            <Trigger SourceName="ContentSite" Property="IsMouseOver" Value="True">
              <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource GrayHoverBrush}" />
              <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource GrayHoverBrush}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" SourceName="ContentSite" Value="True" />
                <Condition Property="IsSelected" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="{DynamicResource BlackBrush}" />
              <Setter Property="Fill" TargetName="Underline" Value="{DynamicResource BlackBrush}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>